# credentials:
#   system:
#     domainCredentials:
#     - credentials:
#       - usernamePassword:
#           id: "exampleuser-creds-id"
#           username: "exampleuser"
#           password: "{AQAAABAAAAAQ1/JHKggxIlBcuVqegoa2AdyVaNvjWIFk430/vI4jEBM=}"
#           description: "Sample credentials of exampleuser"
#           scope: GLOBAL        
jobs:
  - script: >
      pipelineJob('Deploy_infra') {
        definition {
            cpsScm {
                scm {
                    git {
                        branch('master')
                        remote {
                            url('https://github.com/twCatalyst/service-deployment-starter-helm.git')
                            credentials('githubCredentials')

                        }
                    }
                }
                scriptPath('Jenkinsfile_deploy_infra')
            }
         }
      }
      
      pipelineJob('Infra_package') {
        definition {
            cpsScm {
                scm {
                    git {
                        branch('master')
                        remote {
                            url('https://github.com/twCatalyst/service-deployment-starter-helm.git')
                            credentials('githubCredentials')

                        }
                    }
                }
                scriptPath('Jenkinsfile_infra_package')
            }
         }
      }
      
      pipelineJob('Deploy_qa') {
        definition {
            cpsScm {
                scm {
                    git {
                        branch('master')
                        remote {
                            url('https://github.com/twCatalyst/jenkins-shared-library.git')
                            credentials('githubCredentials')

                        }
                    }
                }
                scriptPath('deploy/Jenkinsfile_deploy_qa')
            }
         }
      }
      
      pipelineJob('Deploy_staging') {
        definition {
            cpsScm {
                scm {
                    git {
                        branch('master')
                        remote {
                            url('https://github.com/twCatalyst/jenkins-shared-library.git')
                            credentials('githubCredentials')

                        }
                    }
                }
                scriptPath('deploy/Jenkinsfile_deploy_stage')
            }
         }
      }
      
      pipelineJob('Secrets scanner') {
        definition {
            cpsScm {
                scm {
                    git {
                        branch('master')
                        remote {
                            url('https://github.com/twCatalyst/service-starter.git')
                            credentials('githubCredentials')

                        }
                    }
                }
                scriptPath('JenkinsfileSecrets')
            }
         }
      }
      
      pipelineJob('security') {
        definition {
            cpsScm {
                scm {
                    git {
                        branch('master')
                        remote {
                            url('https://github.com/twCatalyst/service-starter.git')
                            credentials('githubCredentials')

                        }
                    }
                }
                scriptPath('JenkinsfileSecurity')
            }
         }
      }
      
      organizationFolder('catalyst') {
          displayName('catalyst')
          triggers {
              periodic(1)
          }
          organizations {
              github {
                  repoOwner("twCatalyst")
                  credentialsId('githubCredentials')

              }
          }
          projectFactories {
              workflowMultiBranchProjectFactory {
                  scriptPath("Jenkinsfile")
              }
          }
      }
      
unclassified:
  globalConfigFiles:
    configs:
    - custom:
        id: custom-test
        name: DummyCustom1
        comment: dummy custom 1
        content: dummy content 1
    - json:
        id: json-test
        name: DummyJsonConfig
        comment: dummy json config
        content: |
          { "dummydata": {"dummyKey": "dummyValue"} }
      
